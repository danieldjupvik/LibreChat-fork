name: Sync Upstream

on:
  schedule:
    - cron: '0 */1 * * *' # Run every hour
  workflow_dispatch:

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.WORKFLOW_TOKEN }}
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      - name: Add Upstream Remote and Fetch
        run: |
          git remote add upstream https://github.com/danny-avila/LibreChat.git || true
          git fetch upstream

      - name: Check for merge conflicts
        id: check_conflicts
        run: |
          if git merge-tree $(git merge-base HEAD upstream/main) HEAD upstream/main | grep -e "^<<<<<<< " -e "^=======$" -e "^>>>>>>> "; then
            echo "conflicts=true" >> $GITHUB_OUTPUT
          else
            echo "conflicts=false" >> $GITHUB_OUTPUT
          fi

      - name: Merge Upstream Changes
        id: merge
        if: steps.check_conflicts.outputs.conflicts == 'false'
        run: |
          # Get current commit hash
          CURRENT_HASH=$(git rev-parse HEAD)

          # Attempt merge
          git merge upstream/main -m "Sync upstream changes"

          # Get new commit hash
          NEW_HASH=$(git rev-parse HEAD)

          # Check if anything changed
          if [ "$CURRENT_HASH" != "$NEW_HASH" ]; then
            echo "Changes were merged successfully"
            echo "changes_merged=true" >> $GITHUB_OUTPUT
            git push origin HEAD:main
          else
            echo "No new changes to merge"
            echo "changes_merged=false" >> $GITHUB_OUTPUT
          fi

      - name: Trigger Build Workflow
        if: steps.merge.outputs.changes_merged == 'true'
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.WORKFLOW_TOKEN }}
          event-type: upstream-changes-merged

      - name: Create PR for conflicted changes
        if: steps.check_conflicts.outputs.conflicts == 'true'
        run: |
          git checkout -b upstream-sync-$(date +%Y%m%d)
          git merge upstream/main || true
          git push origin upstream-sync-$(date +%Y%m%d)
          gh pr create --title "Upstream Sync (Conflicts to Resolve)" --body "This PR contains upstream changes that resulted in conflicts. Please resolve manually." --base main --head upstream-sync-$(date +%Y%m%d)
        env:
          GH_TOKEN: ${{ secrets.WORKFLOW_TOKEN }}
